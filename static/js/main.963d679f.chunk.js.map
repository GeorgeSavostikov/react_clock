{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","setState","setInterval","tick","clearInterval","console","info","toUTCString","slice","clockName","props","className","React","Component","App","hasClock","window","lastName","nameForClock","value","now","toString","getRandomName","debug","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,KACXC,QAAS,MAHb,uDAME,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZF,QAASG,aACP,kBAAM,EAAKC,SACX,SAVR,kCAeE,WAC6B,OAAvBH,KAAKJ,MAAMG,SACbK,cAAcJ,KAAKJ,MAAMG,WAjB/B,kBAqBE,WACEC,KAAKC,SAAS,CACZJ,MAAO,IAAIC,OAIbO,QAAQC,KAAKN,KAAKJ,MAAMC,MAAMU,cAAcC,OAAO,IAAK,MA3B5D,oBA8BE,WACE,IAAQC,EAAcT,KAAKU,MAAnBD,UACAZ,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGd,EAAMU,cAAcC,OAAO,IAAK,YA3C3C,GAA2BI,IAAMC,WCK1B,IAAMC,EAAb,4MACElB,MAAQ,CACNa,UAAW,UACXV,QAAS,EACTgB,UAAU,GAJd,uDAOE,WAAqB,IAAD,OAClBf,KAAKC,SAAS,CACZF,QAASiB,OAAOd,aAAY,WAC1B,IAAMe,EAAW,EAAKrB,MAAMa,UACtBS,EAvBd,WACE,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWb,OAAO,GAE3C,MAAM,SAAN,OAAgBW,GAoBWG,GAErB,EAAKrB,SAAS,CAAEQ,UAAWS,IAGvB,EAAKtB,MAAMmB,UAIbV,QAAQkB,MAAR,uBAA8BN,EAA9B,eAA6CC,MAE9C,QAGLM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEFD,GACF,EAAKzB,SAAS,CAAEc,UAAU,OAI9BS,SAASC,iBAAiB,SAAS,SAACC,GAClCA,EAAMC,iBAEFD,GACF,EAAKzB,SAAS,CAAEc,UAAU,SArClC,kCA0CE,WACEC,OAAOZ,cAAcJ,KAAKJ,MAAMG,WA3CpC,oBA8CE,WACE,MAAgCC,KAAKJ,MAA7Ba,EAAR,EAAQA,UAAWM,EAAnB,EAAmBA,SAEnB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECI,GAAY,cAAC,EAAD,CAAON,UAAWA,WArDvC,GAAyBG,IAAMC,WCb/Be,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.963d679f.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  today: Date,\n  timerId: NodeJS.Timer | null,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    today: new Date(),\n    timerId: null,\n  };\n\n  componentDidMount() {\n    this.setState({\n      timerId: setInterval(\n        () => this.tick(),\n        1000,\n      ),\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.state.timerId !== null) {\n      clearInterval(this.state.timerId);\n    }\n  }\n\n  tick() {\n    this.setState({\n      today: new Date(),\n    });\n\n    // eslint-disable-next-line no-console\n    console.info(this.state.today.toUTCString().slice(-12, -4));\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  timerId: number,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    timerId: 0,\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    this.setState({\n      timerId: window.setInterval(() => {\n        const lastName = this.state.clockName;\n        const nameForClock = getRandomName();\n\n        this.setState({ clockName: nameForClock });\n\n        // eslint-disable-next-line react/no-access-state-in-setstate\n        if (this.state.hasClock) {\n          // eslint-disable-next-line no-console\n          // console.info(nameForClock);\n          // eslint-disable-next-line no-console\n          console.debug(`Renamed from ${lastName} to ${nameForClock}`);\n        }\n      }, 3300),\n    });\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault(); // not to show the context menu\n\n      if (event) {\n        this.setState({ hasClock: false });\n      }\n    });\n\n    document.addEventListener('click', (event: MouseEvent) => {\n      event.preventDefault();\n\n      if (event) {\n        this.setState({ hasClock: true });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.timerId);\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}